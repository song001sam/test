#数据库配置
spring.datasource.Druid.url=jdbc:mysql://localhost:3306/test?useUnicode=true&characterEncoding=utf-8&serverTimezone=GMT%2B8
spring.datasource.Druid.username=root
spring.datasource.Druid.password=root
spring.datasource.Druid.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.Druid.driver-class-name=com.mysql.cj.jdbc.Driver
# 初始化大小，最小，最大
spring.datasource.Druid.initialSize=5
spring.datasource.Druid.minIdle=5
spring.datasource.Druid.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.Druid.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.Druid.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.Druid.minEvictableIdleTimeMillis=300000
# 校验SQL，Oracle配置 spring.datasource.Druid.validationQuery=SELECT 1 FROM DUAL，如果不配validationQuery项，则下面三项配置无用
spring.datasource.Druid.validationQuery=SELECT 'x' from system.dual;
spring.datasource.Druid.testWhileIdle=true
spring.datasource.Druid.testOnBorrow=false
spring.datasource.Druid.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.Druid.poolPreparedStatements=true
spring.datasource.Druid.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.Druid.filters=stat,slf4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.Druid.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
spring.datasource.Druid.useGlobalDataSourceStat=true
#########################Druid数据源配置结束
spring.datasource.Inceptor.url=jdbc:hive2://192.168.33.21:10000/bdia
spring.datasource.Inceptor.username=hive
spring.datasource.Inceptor.password=123456
spring.datasource.Inceptor.driver-class-name=org.apache.hive.jdbc.HiveDriver
spring.datasource.Inceptor.initialSize=5
spring.datasource.Inceptor.minIdle=5
spring.datasource.Inceptor.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.Inceptor.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.Inceptor.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.Inceptor.minEvictableIdleTimeMillis=300000
# 校验SQL，Oracle配置 spring.datasource.Inceptor.validationQuery=SELECT 1 FROM DUAL，如果不配validationQuery项，则下面三项配置无用
spring.datasource.Inceptor.validationQuery=SELECT 'x' from system.dual;
spring.datasource.Inceptor.testWhileIdle=true
spring.datasource.Inceptor.testOnBorrow=false
spring.datasource.Inceptor.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.Inceptor.poolPreparedStatements=true
spring.datasource.Inceptor.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.Inceptor.filters=stat,slf4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.Inceptor.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
spring.datasource.Inceptor.useGlobalDataSourceStat=true
#########################Inceptor数据源配置结束
# 加载mybatis的mapper
mybatis.mapper-locations=classpath:mybatis/*.xml
mybatis.config-location=classpath:mybatis-config.xml
#server.tomcat.basedir=test
server.servlet.context-path=/BDIA
#pagehelper
pagehelper.helperDialect=mysql
pagehelper.reasonable=true
pagehelper.supportMethodsArguments=true
pagehelper.params=count=countSql
# html图形化
spring.mvc.view.prefix=/view/
spring.mvc.view.suffix=.html
# 热部署
spring.thymeleaf.cache=false
spring.devtools.restart.enabled=true
#spring.devtools.restart.additional-paths=resources/**,static/**,templates/**
# 超时时间
server.servlet.session.timeout=6000
spring.session.timeout=6000
#management.endpoint.health.show-details=always